// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;
import ballerina/jballerina.java;

function setModule() = @java:Method {'class: "io.ballerina.openapi.client.ModuleUtils"} external;

function init() {
    setModule();
}

type ClientMethodImpl record {|
    string name;
|};

annotation ClientMethodImpl MethodImpl on function;

type ClientMethodInvocationError http:ClientError;

public isolated client class Client {
    final http:StatusCodeClient clientEp;
    # Gets invoked to initialize the `connector`.
    #
    # + config - The configurations to be used when initializing the `connector` 
    # + serviceUrl - URL of the target service 
    # + return - An error if connector initialization failed 
    public isolated function init(ConnectionConfig config =  {}, string serviceUrl = "http://localhost:8080/socialMedia") returns error? {
        http:ClientConfiguration httpClientConfig = {httpVersion: config.httpVersion, http1Settings: config.http1Settings, http2Settings: config.http2Settings, timeout: config.timeout, forwarded: config.forwarded, followRedirects: config.followRedirects, poolConfig: config.poolConfig, cache: config.cache, compression: config.compression, circuitBreaker: config.circuitBreaker, retryConfig: config.retryConfig, cookieConfig: config.cookieConfig, responseLimits: config.responseLimits, secureSocket: config.secureSocket, proxy: config.proxy, socketConfig: config.socketConfig, validation: config.validation, laxDataBinding: config.laxDataBinding};
        self.clientEp = check new (serviceUrl, httpClientConfig);
    }

    # Get all users
    #
    # + headers - Headers to be sent with the request
    # + return - Ok
    @MethodImpl {name: "getUsersImpl"}
    resource isolated function get users(map<string|string[]> headers = {}, typedesc<http:Ok> targetType = <>) returns targetType|error = @java:Method {'class: "io.ballerina.openapi.client.GeneratedClient", name: "invokeResourceWithoutPath"} external;

    private isolated function getUsersImpl(map<string|string[]> headers, typedesc<http:Ok> targetType) returns http:StatusCodeResponse|error {
        string resourcePath = string `/users`;
        return self.clientEp->get(resourcePath, headers, targetType = targetType);
    }

    # Get all products
    #
    # + headers - Headers to be sent with the request 
    # + return - Ok 
    @MethodImpl {name: "getProductsImpl"}
    resource isolated function get products(map<string|string[]> headers = {}, typedesc<Ok> targetType = <>) returns targetType|error = @java:Method {'class: "io.ballerina.openapi.client.GeneratedClient", name: "invokeResourceWithoutPath"} external;

    private isolated function getProductsImpl(map<string|string[]> headers, typedesc<Ok> targetType) returns http:StatusCodeResponse|error {
        string resourcePath = string `/products`;
        return self.clientEp->get(resourcePath, headers, targetType = targetType);
    }

    # Get user by id
    #
    # + headers - Headers to be sent with the request 
    # + return - Ok 
    @MethodImpl {name: "getUserByIdImpl"}
    resource isolated function get users/[int id](map<string|string[]> headers = {}, typedesc<UserOk> targetType = <>) returns targetType|error = @java:Method {'class: "io.ballerina.openapi.client.GeneratedClient", name: "invokeResource"} external;

    private isolated function getUserByIdImpl(int id, map<string|string[]> headers, typedesc<UserOk> targetType) returns http:StatusCodeResponse|error {
        string resourcePath = string `/users/${getEncodedUri(id)}`;
        return self.clientEp->get(resourcePath, headers, targetType = targetType);
    }
}
